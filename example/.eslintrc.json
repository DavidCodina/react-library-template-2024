{
  "globals": {},
  "root": true,
  "env": {
    "browser": true,
    "es2022": true
    // "node": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {},
  "extends": [
    // The @eslint/js : "plugin:@eslint/js/recommended" replaces "eslint:recommended"
    // once we update to eslint version 9. For now, stick with "eslint:recommended".
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react-hooks/recommended",
    // "plugin:testing-library/react",
    // "plugin:jest-dom/recommended",
    // "plugin:jsx-a11y/recommended",
    // "plugin:storybook/recommended",
    "prettier"
  ],

  "ignorePatterns": ["dist", ".eslintrc.cjs", ".eslintrc.json"],

  "plugins": [
    "@typescript-eslint",
    // "vitest",
    // https://react.dev/learn/react-compiler#installing-eslint-plugin-react-compiler
    // "eslint-plugin-react-compiler",
    // "jsx-a11y",
    // "testing-library",
    // "jest-dom",
    // "react-refresh",
    "promise",
    // "eslint-plugin-tsdoc",
    "prettier"
  ],

  "rules": {
    // "react-compiler/react-compiler": "warn",
    // "tsdoc/syntax": "warn",
    ///////////////////////////////////////////////////////////////////////////
    //
    // Vite comes with eslint-plugin-react-refresh baked in.
    // However, this plugin gets in the way of syntax like
    // export * from './loader', which occurs in a lot of
    // component pages. For this reason, I've disabled it.
    //
    ///////////////////////////////////////////////////////////////////////////

    // "react-refresh/only-export-components": [ "warn", { "allowConstantExport": true }],
    "prettier/prettier": "warn",
    "arrow-body-style": "off",
    "prefer-arrow-callback": "off",
    "guard-for-in": "warn",
    "require-await": "warn",
    // "vitest/expect-expect": "warn",
    "testing-library/no-debugging-utils": "off",
    "prefer-const": "warn",
    "no-var": "warn",
    "no-throw-literal": "warn",
    "no-unreachable": "warn",
    "import/no-anonymous-default-export": "off",
    "no-eq-null": "warn",
    "react/no-unescaped-entities": "off",
    "no-prototype-builtins": "off",

    "@typescript-eslint/ban-ts-comment": "off", // Allows ignore statement
    "@typescript-eslint/no-unused-vars": [
      "warn",
      { "argsIgnorePattern": "^_", "varsIgnorePattern": "^_" }
    ],
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-explicit-any": "off",

    "promise/always-return": "warn",
    "promise/no-return-wrap": "warn",
    "promise/param-names": "warn",
    "promise/catch-or-return": ["warn", { "allowFinally": true }],
    "promise/no-native": "off",
    "promise/no-nesting": "warn",
    "promise/no-promise-in-callback": "warn",
    "promise/no-callback-in-promise": "warn",
    "promise/avoid-new": "off",
    "promise/no-new-statics": "warn",
    "promise/no-return-in-finally": "warn",
    "promise/valid-params": "warn"

    // "jest/no-disabled-tests": "off",
    // "jest/no-commented-out-tests": "off"
  }
}
